# docker-compose.yml - 主配置文件
version: "3.8"

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: media-hub-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: media_hub_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - media-hub-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d media_hub_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: media-hub-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - media-hub-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # 认证服务
  auth-api:
    build:
      context: .
      dockerfile: packages/auth-api/Dockerfile
    container_name: media-hub-auth-api
    restart: unless-stopped
    ports:
      - "3100:3100"
    environment:
      - NODE_ENV=production
      - PORT=3100
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/media_hub_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET:-dev-jwt-secret-key-change-in-production}
      - JWT_EXPIRES_IN=1h
      - SMS_PROVIDER=mock
      - MOCK_EXTERNAL_SERVICES=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - media-hub-network
    volumes:
      - ./logs/auth:/app/logs

  # 订阅服务
  subscription-api:
    build:
      context: .
      dockerfile: packages/subscription-api/Dockerfile
    container_name: media-hub-subscription-api
    restart: unless-stopped
    ports:
      - "3101:3101"
    environment:
      - NODE_ENV=production
      - PORT=3101
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/media_hub_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET:-dev-jwt-secret-key-change-in-production}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-api:
        condition: service_healthy
    networks:
      - media-hub-network

  # 支付服务
  payment-api:
    build:
      context: .
      dockerfile: packages/payment-api/Dockerfile
    container_name: media-hub-payment-api
    restart: unless-stopped
    ports:
      - "3102:3102"
    environment:
      - NODE_ENV=production
      - PORT=3102
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/media_hub_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET:-dev-jwt-secret-key-change-in-production}
      - PAYMENT_TEST_MODE=true
      - AUTH_API_URL=http://auth-api:3100
      - SUBSCRIPTION_API_URL=http://subscription-api:3101
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-api:
        condition: service_healthy
    networks:
      - media-hub-network

  # 管理后台
  admin-dashboard:
    build:
      context: .
      dockerfile: packages/admin-dashboard/Dockerfile
    container_name: media-hub-admin-dashboard
    restart: unless-stopped
    ports:
      - "3103:3103"
    environment:
      - NODE_ENV=production
      - PORT=3103
      - NEXT_PUBLIC_AUTH_API_URL=http://localhost:3100/api/v1
      - NEXT_PUBLIC_SUBSCRIPTION_API_URL=http://localhost:3101
      - NEXT_PUBLIC_PAYMENT_API_URL=http://localhost:3102
      - NEXTAUTH_URL=http://localhost:3103
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-nextauth-secret}
    depends_on:
      - auth-api
      - subscription-api
      - payment-api
    networks:
      - media-hub-network

  # 数据库管理工具（可选）
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: media-hub-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - media-hub-network
    profiles:
      - tools

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: media-hub-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - auth-api
      - subscription-api
      - payment-api
      - admin-dashboard
    networks:
      - media-hub-network
    profiles:
      - proxy

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  media-hub-network:
    driver: bridge
