// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String?  @unique @db.VarChar(50)
  phone        String?  @unique @db.VarChar(20)
  email        String?  @unique @db.VarChar(100)
  passwordHash String?  @map("password_hash") @db.VarChar(255)
  avatarUrl    String?  @map("avatar_url") @db.VarChar(255)
  status       Int      @default(1) // 1:正常 0:禁用
  wechatOpenid   String?   @unique @map("wechat_openid") @db.VarChar(64)
  wechatUnionid  String?   @unique @map("wechat_unionid") @db.VarChar(64)
  wechatNickname String?   @map("wechat_nickname") @db.VarChar(100)
  wechatAvatar   String?   @map("wechat_avatar") @db.VarChar(255)
  wechatBoundAt  DateTime? @map("wechat_bound_at")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // 反向关系字段 - 这些是修复错误的关键
  refreshTokens RefreshToken[]
  orders        Order[]
  subscriptions Subscription[]

  @@index([phone])
  @@index([email])
  @@index([wechatOpenid])
  @@index([wechatUnionid])
  @@map("users")
}

model SmsCode {
  id        Int      @id @default(autoincrement())
  phone     String   @db.VarChar(20)
  code      String   @db.VarChar(6)
  used      Boolean  @default(false)
  scene     String   @db.VarChar(20) // register, login, reset_password
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")

  @@index([phone])
  @@index([phone, scene])
  @@map("sms_codes")
}

model RefreshToken {
  id        String   @id @default(uuid())
  userId    Int      @map("user_id")
  token     String   @unique @db.VarChar(500)
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("refresh_tokens")
}

model LoginAttempt {
  id         Int      @id @default(autoincrement())
  identifier String   @db.VarChar(100) // phone or email
  ip         String   @db.VarChar(45)
  success    Boolean  @default(false)
  createdAt  DateTime @default(now()) @map("created_at")

  @@index([identifier, createdAt])
  @@index([ip, createdAt])
  @@map("login_attempts")
}

model Order {
  id             Int       @id @default(autoincrement())
  orderNo        String    @unique @map("order_no") @db.VarChar(32)
  userId         Int       @map("user_id")
  planId         String    @map("plan_id") @db.VarChar(20)
  planName       String    @map("plan_name") @db.VarChar(50)
  originalAmount Decimal   @map("original_amount") @db.Decimal(10, 2)
  discountAmount Decimal   @default(0) @map("discount_amount") @db.Decimal(10, 2)
  finalAmount    Decimal   @map("final_amount") @db.Decimal(10, 2)
  paymentMethod  String?   @map("payment_method") @db.VarChar(20)
  paymentStatus  Int       @default(0) @map("payment_status")
  tradeNo        String?   @map("trade_no") @db.VarChar(64)
  qrCodeUrl      String?   @map("qr_code_url") @db.VarChar(255)
  expiresAt      DateTime  @map("expires_at")
  paidAt         DateTime? @map("paid_at")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")

  user      User              @relation(fields: [userId], references: [id])
  callbacks PaymentCallback[]
  refunds   Refund[]

  @@index([userId, paymentStatus], map: "idx_orders_user_status")
  @@index([orderNo], map: "idx_orders_order_no")
  @@index([tradeNo], map: "idx_orders_trade_no")
  @@index([expiresAt], map: "idx_orders_expires_at")
  @@map("orders")
}

model PaymentCallback {
  id            Int       @id @default(autoincrement())
  orderNo       String    @map("order_no") @db.VarChar(32)
  paymentMethod String    @map("payment_method") @db.VarChar(20)
  tradeNo       String?   @map("trade_no") @db.VarChar(64)
  callbackData  Json      @map("callback_data")
  signature     String?   @db.VarChar(255)
  status        Int       @default(0)
  processedAt   DateTime? @map("processed_at")
  createdAt     DateTime  @default(now()) @map("created_at")

  order Order @relation(fields: [orderNo], references: [orderNo])

  @@index([orderNo], map: "idx_payment_callbacks_order_no")
  @@map("payment_callbacks")
}

model Refund {
  id            Int       @id @default(autoincrement())
  orderNo       String    @map("order_no") @db.VarChar(32)
  refundNo      String    @unique @map("refund_no") @db.VarChar(32)
  refundAmount  Decimal   @map("refund_amount") @db.Decimal(10, 2)
  refundReason  String?   @map("refund_reason") @db.VarChar(255)
  refundStatus  Int       @default(0) @map("refund_status")
  tradeRefundNo String?   @map("trade_refund_no") @db.VarChar(64)
  refundedAt    DateTime? @map("refunded_at")
  createdAt     DateTime  @default(now()) @map("created_at")

  order Order @relation(fields: [orderNo], references: [orderNo])

  @@map("refunds")
}

// 订阅表 - 你可能还需要这个
model Subscription {
  id            Int      @id @default(autoincrement())
  userId        Int      @map("user_id")
  planId        String   @map("plan_id") @db.VarChar(20)
  planName      String   @map("plan_name") @db.VarChar(50)
  originalPrice Decimal  @map("original_price") @db.Decimal(10, 2)
  paidPrice     Decimal  @map("paid_price") @db.Decimal(10, 2)
  startDate     DateTime @map("start_date")
  endDate       DateTime @map("end_date")
  status        Int      @default(1) // 1:有效 0:过期 -1:取消 2:暂停
  autoRenew     Boolean  @default(false) @map("auto_renew")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])

  @@index([userId, status])
  @@index([endDate])
  @@map("subscriptions")
}
